<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.yfyue.sysauth.db.inter.BjUserMapper" >
  <resultMap id="BaseResultMap" type="cn.yfyue.sysauth.db.model.BjUser" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="USER_ID" property="userId" jdbcType="BIGINT" />
    <result column="LOGIN_NAME" property="loginName" jdbcType="CHAR" />
    <result column="PASS_WORD" property="passWord" jdbcType="CHAR" />
    <result column="USER_NAME" property="userName" jdbcType="CHAR" />
    <result column="MOBILE_NO" property="mobileNo" jdbcType="CHAR" />
    <result column="USER_STATUS" property="userStatus" jdbcType="INTEGER" />
    <result column="OPEN_TIME" property="openTime" jdbcType="TIMESTAMP" />
    <result column="OPEN_USER_ID" property="openUserId" jdbcType="BIGINT" />
    <result column="ADMIN_LEVEL" property="adminLevel" jdbcType="INTEGER" />
    <result column="ORGE_ID" property="orgeId" jdbcType="BIGINT" />
    <result column="ROLE_CODE" property="roleCode" jdbcType="VARCHAR" />
    <result column="DATA_EXT" property="dataExt" jdbcType="VARCHAR" />
    <result column="DATA_EXT2" property="dataExt2" jdbcType="VARCHAR" />
    <result column="UP_TIME" property="upTime" jdbcType="TIMESTAMP" />
    <result column="ORGE_NAME" property="orgeName" jdbcType="CHAR" />
    <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
    <result column="OPEN_USER_NAME" property="openUserName" jdbcType="CHAR" />
  </resultMap>
<!-- 
//用户列表
List<BjUser> getUserList(@Param("userId")String userId,@Param("adminLevel")String adminLevel,
		@Param("qkey")String qkey,@Param("startRow")int startRow,@Param("rowNum")int rowNum);
-->
<select id="getUserList"   resultMap="BaseResultMap">
    SELECT USER_ID,LOGIN_NAME,USER_NAME,MOBILE_NO,USER_STATUS,OPEN_TIME,ROLE_CODE,ORGE_NAME,
     OPEN_USER_NAME FROM (
     SELECT a.USER_ID,a.LOGIN_NAME,a.USER_NAME,a.MOBILE_NO,a.USER_STATUS,
		  a.OPEN_TIME,a.ROLE_CODE,c.ORGE_FULL_NAME as ORGE_NAME,b.USER_NAME AS OPEN_USER_NAME
		FROM BJ_USER a LEFT JOIN BJ_USER b ON (a.OPEN_USER_ID=b.USER_ID)
		    LEFT JOIN BJ_ORGE c ON (a.ORGE_ID=c.ORGE_ID)
		 WHERE 1=1 
		 <if test=" adminLevel !=0">
       			AND a.OPEN_USER_ID=#{userId,jdbcType=BIGINT}   
          </if> 
		 <if test="qkey !=null">
		       AND (a.LOGIN_NAME LIKE '%${qkey}%' OR a.USER_NAME LIKE '%${qkey}%' )
		 </if>
              ORDER BY a.OPEN_TIME DESC
         ) as Q1  LIMIT #{startRow,jdbcType=INTEGER},#{rowNum,jdbcType=INTEGER}
  </select>  
<!--	
//用户列表统计
int getUserListCount(@Param("userId")String userId,@Param("adminLevel")String adminLevel,
		@Param("qkey")String qkey);
 -->  
 <select id="getUserListCount"   resultType="java.lang.Integer">
    SELECT COUNT(1) FROM BJ_USER a LEFT JOIN BJ_USER b ON (a.OPEN_USER_ID=b.USER_ID)
		    LEFT JOIN BJ_ORGE c ON (a.ORGE_ID=c.ORGE_ID)
		 WHERE 1=1 
		 <if test=" adminLevel !=0">
       			AND a.OPEN_USER_ID=#{userId,jdbcType=BIGINT}   
          </if> 
		 <if test="qkey !=null">
		       AND (a.LOGIN_NAME LIKE '%${qkey}%' OR a.USER_NAME LIKE '%${qkey}%' )
		 </if>
 </select>
 <!-- 
 //登录
int isLogin(@Param("login_name")String login_name,@Param("passwd")String passwd);
-->
<select id="isLogin"   resultType="java.lang.Integer">
    SELECT COUNT(1) FROM BJ_USER WHERE USER_STATUS=0 
      AND LOGIN_NAME=#{login_name,jdbcType=CHAR}  
      AND PASS_WORD=#{passwd,jdbcType=CHAR}  
  </select>
<!--
//取登录数据
BjUser getUserLoginInfo(@Param("login_name")String login_name);
  --> 
<select id="getUserLoginInfo"   resultMap="BaseResultMap">
    SELECT   a.USER_ID,a.LOGIN_NAME,a.USER_NAME,a.ADMIN_LEVEL,a.ORGE_ID,b.ORGE_NAME,
      a.ROLE_CODE,a.DATA_EXT,a.DATA_EXT2
		FROM BJ_USER a LEFT JOIN BJ_ORGE b ON a.ORGE_ID=b.ORGE_ID 
	WHERE a.LOGIN_NAME=#{login_name,jdbcType=CHAR}  LIMIT 1
</select> 

 <!-- 
 //取自己的信息
BjUser getMyInfo(@Param("userId")String userId);
-->
<select id="getMyInfo"   resultMap="BaseResultMap">
	SELECT  a.USER_ID,a.LOGIN_NAME,a.USER_NAME,a.MOBILE_NO,a.USER_STATUS,a.ORGE_ID,
	  a.ROLE_CODE,b.ORGE_NAME,c.DATA_NAME AS ROLE_NAME
	FROM BJ_USER a LEFT JOIN BJ_ORGE b ON (a.ORGE_ID=b.ORGE_ID)
	     LEFT JOIN BJ_INIT_DATA c ON (a.ROLE_CODE=c.DATA_CODE)
	WHERE a.USER_ID=#{userId,jdbcType=BIGINT}     
</select>
 <!-- 
//用户名是否存在
int isLoginName(@Param("loginName")String loginName);
-->
<select id="isLoginName"   resultType="java.lang.Integer">
   SELECT COUNT(1) FROM BJ_USER WHERE LOGIN_NAME=#{loginName,jdbcType=CHAR}
</select>
 <!-- 
//自己更新密码
int upMyPasswd(@Param("userId")String userId, @Param("oldPasswd")String oldPasswd, @Param("passwd")String passwd);
-->
<update id="upMyPasswd">
    UPDATE BJ_USER SET PASS_WORD=#{passwd,jdbcType=CHAR} 
      WHERE USER_ID=#{userId,jdbcType=BIGINT} 
      AND PASS_WORD=#{oldPasswd,jdbcType=CHAR}
</update>
 <!-- 
//初始化密码
int initPasswd(@Param("userId")String userId, @Param("passwd")String passwd);
-->
<update id="initPasswd">
    UPDATE BJ_USER SET PASS_WORD=#{passwd,jdbcType=CHAR} 
      WHERE USER_ID=#{userId,jdbcType=BIGINT} 
</update>
 <!-- 
//验证密码是否正确
int isMyPasswd(@Param("userId")String userId, @Param("oldPasswd")String oldPasswd);
 --> 
<select id="isMyPasswd"   resultType="java.lang.Integer">
   SELECT COUNT(1) FROM BJ_USER WHERE USER_ID= #{userId,jdbcType=BIGINT}
     AND PASS_WORD= #{oldPasswd,jdbcType=CHAR}
</select>  
<!-- 
//更新自己信息
int upUserInfo(BjUser bjUser);
 -->  
 <update id="upUserInfo" parameterType="cn.yfyue.sysauth.db.model.BjUser" >
    update BJ_USER
    <set >
      <if test="userName != null" >
        USER_NAME = #{userName,jdbcType=CHAR},
      </if>
      <if test="mobileNo != null" >
        MOBILE_NO = #{mobileNo,jdbcType=CHAR},
      </if>
      <if test="userStatus != null" >
        USER_STATUS = #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="orgeId != null" >
        ORGE_ID = #{orgeId,jdbcType=BIGINT},
      </if>
      <if test="roleCode != null" >
        ROLE_CODE = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="dataExt != null" >
        DATA_EXT = #{dataExt,jdbcType=VARCHAR},
      </if>
      <if test="dataExt2 != null" >
        DATA_EXT2 = #{dataExt2,jdbcType=VARCHAR},
      </if>
        UP_TIME = NOW(),
    </set>
    where USER_ID = #{userId,jdbcType=BIGINT}
  </update>  
 <!-- 
 //添加账户
int addUser(BjUser bjUser);
  --> 
  <insert id="addUser" parameterType="cn.yfyue.sysauth.db.model.BjUser" >
    insert into BJ_USER (LOGIN_NAME, PASS_WORD, 
      USER_NAME, MOBILE_NO, USER_STATUS, 
      OPEN_TIME, OPEN_USER_ID, ADMIN_LEVEL, 
      ORGE_ID, ROLE_CODE, DATA_EXT, 
      DATA_EXT2, UP_TIME)
    values (#{loginName,jdbcType=CHAR}, #{passWord,jdbcType=CHAR}, 
      #{userName,jdbcType=CHAR}, #{mobileNo,jdbcType=CHAR},0, 
      NOW(), #{openUserId,jdbcType=BIGINT}, #{adminLevel,jdbcType=INTEGER}, 
      #{orgeId,jdbcType=BIGINT}, #{roleCode,jdbcType=VARCHAR}, #{dataExt,jdbcType=VARCHAR}, 
      #{dataExt2,jdbcType=VARCHAR}, NOW())
  </insert>
<!-- 
//启用账户
int enabledUser(String userId);
-->
<update id="enabledUser">
   UPDATE BJ_USER SET USER_STATUS=0 WHERE USER_ID=#{userId,jdbcType=BIGINT}
</update>
<!--
//禁用账户
int disabledUser(String userId);
 --> 
 <update id="disabledUser">
    UPDATE BJ_USER SET USER_STATUS=1 WHERE USER_ID=#{userId,jdbcType=BIGINT}
</update>
</mapper>