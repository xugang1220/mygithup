<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.yfyue.sysauth.db.inter.BjLogMapper" >
  <resultMap id="BaseResultMap" type="cn.yfyue.sysauth.db.model.BjLog" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="LOG_ID" property="logId" jdbcType="BIGINT" />
    <result column="LOG_TYPE" property="logType" jdbcType="INTEGER" />
    <result column="LOGIN_NAME" property="loginName" jdbcType="VARCHAR" />
    <result column="USER_NAME" property="userName" jdbcType="CHAR" />
    
    <result column="OP_IP" property="opIp" jdbcType="VARCHAR" />
    <result column="USER_ENVI" property="userEnvi" jdbcType="VARCHAR" />
    <result column="OP_TITLE" property="opTitle" jdbcType="VARCHAR" />
    <result column="CLASS_METHOD" property="classMethod" jdbcType="VARCHAR" />
    <result column="OP_PARA" property="opPara" jdbcType="VARCHAR" />
    <result column="OP_FLAG" property="opFlag" jdbcType="VARCHAR" />
    <result column="LOG_TIME" property="logTime" jdbcType="TIMESTAMP" />
  </resultMap>
 <!-- 
  //添加LOG
int addLog(BjLog bjLog);
-->
<insert id="addLog" parameterType="cn.yfyue.sysauth.db.model.BjLog" >
    insert into BJ_LOG (LOG_TYPE, LOGIN_NAME, 
      OP_IP, USER_ENVI, OP_TITLE, 
      CLASS_METHOD, OP_PARA, OP_FLAG, 
      LOG_TIME)
    values (#{logType,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR}, 
      #{opIp,jdbcType=VARCHAR}, #{userEnvi,jdbcType=VARCHAR}, #{opTitle,jdbcType=VARCHAR}, 
      #{classMethod,jdbcType=VARCHAR}, #{opPara,jdbcType=VARCHAR}, #{opFlag,jdbcType=VARCHAR}, 
      NOW())
</insert>
 <!-- 
//日志列表
List<BjLog> logList(@Param("adminLevel")String adminLevel,@Param("query_key")String query_key,
		@Param("loginName")String loginName,@Param("log_type")String log_type,
		@Param("b_time")String b_time,@Param("e_time")String e_time,
		@Param("startRow")int startRow,@Param("rowNum")int rowNum);
  -->
<select id="logList"   resultMap="BaseResultMap">
    SELECT LOG_ID,LOG_TYPE,LOGIN_NAME,OP_IP,USER_ENVI,OP_TITLE,USER_NAME,LOG_TIME,OP_FLAG FROM (
		SELECT a.LOG_ID,a.LOG_TYPE,a.LOGIN_NAME,a.OP_IP,a.USER_ENVI,a.OP_TITLE,OP_FLAG,
			  a.LOG_TIME,b.USER_NAME 
			FROM BJ_LOG a LEFT JOIN BJ_USER b ON (a.LOGIN_NAME=b.LOGIN_NAME) WHERE 1=1
			 <if test=" adminLevel !=0">
       			  AND b.ADMIN_LEVEL!=0
              </if> 
              <if test="log_type !=null">
                   AND a.LOG_TYPE=#{log_type,jdbcType=INTEGER}
			  </if> 
              <if test="loginName !=null">
                  AND a.LOGIN_NAME=#{loginName,jdbcType=VARCHAR}
              </if>
                <if test="query_key !=null">
                   AND (a.OP_TITLE LIKE '%${query_key}%' OR a.CLASS_METHOD LIKE '%${query_key}%')
				</if>
			    <if test="b_time !=null">
                     AND  a.LOG_TIME <![CDATA[>=]]>#{b_time,jdbcType=TIMESTAMP}
				</if>
				<if test="e_time !=null">
                     AND  a.LOG_TIME <![CDATA[<=]]>#{e_time,jdbcType=TIMESTAMP}
				</if>
              ORDER BY a.LOG_TIME DESC
         ) as Q1  LIMIT #{startRow,jdbcType=INTEGER},#{rowNum,jdbcType=INTEGER}
  </select>  
  <!-- 
   //统计
int logListCount(@Param("adminLevel")String adminLevel,@Param("query_key")String query_key, 
		@Param("loginName")String loginName,@Param("log_type")String log_type,
		@Param("b_time")String b_time,@Param("e_time")String e_time);
   -->
<select id="logListCount"   resultType="java.lang.Integer">
    SELECT COUNT(1) FROM BJ_LOG a LEFT JOIN BJ_USER b ON (a.LOGIN_NAME=b.LOGIN_NAME) WHERE 1=1
        <if test="adminLevel !=0">
    		AND b.ADMIN_LEVEL!=0
         </if> 
         <if test="log_type !=null">
              AND a.LOG_TYPE=#{log_type,jdbcType=INTEGER}
         </if> 
          <if test="loginName !=null">
               AND a.LOGIN_NAME=#{loginName,jdbcType=CHAR}
          </if>
          <if test="query_key !=null">
               AND (a.OP_TITLE LIKE '%${query_key}%' OR a.CLASS_METHOD LIKE '%${query_key}%')
	      </if>
          <if test="b_time !=null">
               AND  a.LOG_TIME <![CDATA[>=]]>#{b_time,jdbcType=TIMESTAMP}
          </if>
          <if test="e_time !=null">
                AND  a.LOG_TIME <![CDATA[<=]]>#{b_time,jdbcType=TIMESTAMP}
           </if>
 </select>   
</mapper>