<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.yfyue.lxc.db.inter.TLxcOrderMapper" >
  <resultMap id="BaseResultMap" type="cn.yfyue.lxc.db.model.TLxcOrder" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="consumer_id" property="consumerId" jdbcType="INTEGER" />
    <result column="oname" property="oname" jdbcType="VARCHAR" />
    <result column="remove" property="remove" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="community_name" property="communityName" jdbcType="VARCHAR" />
    <result column="car_location" property="carLocation" jdbcType="VARCHAR" />
    <result column="car_number" property="carNumber" jdbcType="VARCHAR" />
    <result column="wash_type" property="washType" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="use_car_time" property="useCarTime" jdbcType="TIMESTAMP" />
    <result column="room_number" property="roomNumber" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="accept_time" property="acceptTime" jdbcType="TIMESTAMP" />
    <result column="finish_time" property="finishTime" jdbcType="TIMESTAMP" />
    <result column="accept_note" property="acceptNote" jdbcType="VARCHAR" />
    <result column="order_status" property="orderStatus" jdbcType="VARCHAR" />
    <result column="order_money" property="orderMoney" jdbcType="REAL" />
    <result column="back_money" property="backMoney" jdbcType="REAL" />
    <result column="service_rate" property="serviceRate" jdbcType="INTEGER" />
    <result column="service_note" property="serviceNote" jdbcType="VARCHAR" />
    <result column="accept_user_name" property="acceptUserName" jdbcType="VARCHAR" />
    <result column="wash_user_name" property="washUserName" jdbcType="VARCHAR" />
    <result column="pay_type" property="payType" jdbcType="VARCHAR" />
  </resultMap>
 
 <resultMap  id="CountOrderMoney" type="cn.yfyue.lxc.db.model.OrderSumoney">
 	<result column="ordersumoney" property="ordersumoney" jdbcType="VARCHAR" />
    <result column="backsumoney" property="backsumoney" jdbcType="VARCHAR" />
 </resultMap>
 
 <!-- 查询所有订单 -->
  <select id="getOrderList" resultMap="BaseResultMap">
    SELECT id,consumer_id,oname,remove,create_time,update_time,community_name,
    car_location,car_number,wash_type,phone,use_car_time,room_number,note,accept_time,finish_time,
    accept_note,order_status,order_money,back_money,service_rate,service_note,accept_user_name,wash_user_name,pay_type FROM (
     SELECT id,consumer_id,oname,remove,create_time,update_time,community_name,
    car_location,car_number,wash_type,phone,use_car_time,room_number,note,accept_time,finish_time,
    accept_note,order_status,order_money,back_money,service_rate,service_note,accept_user_name,wash_user_name,pay_type
		FROM t_lxc_order
		 WHERE 1=1 
		 <if test="qkey !=null">
		 	AND consumer_id LIKE '${qkey}'
		 </if>
              ORDER BY create_time DESC
         ) as Q1  LIMIT #{startRow,jdbcType=INTEGER},#{rownum,jdbcType=INTEGER}
  </select>  
<!--统计订单条数-->  
 <select id="getOrderListCount" resultType="java.lang.Integer">
    SELECT COUNT(1) FROM t_lxc_order
		 WHERE 1=1 
		 <if test="qkey !=null">
		    AND consumer_id LIKE '%${qkey}%'
		 </if>
 </select>
 <!-- 添加订单 -->
 <insert id="addOrder" parameterType="cn.yfyue.lxc.db.model.TLxcOrder" useGeneratedKeys="true" keyProperty="id">
 	INSERT INTO t_lxc_order(consumer_id,oname,remove,create_time,update_time,community_name,
    car_location,car_number,wash_type,phone,use_car_time,room_number,note,accept_time,finish_time,
    accept_note,order_status,order_money,back_money,service_rate,service_note,accept_user_name,wash_user_name,pay_type)
    VALUES(#{consumerId,jdbcType=INTEGER},#{oname,jdbcType=VARCHAR},#{remove,jdbcType=BIT},
    #{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP},#{communityName,jdbcType=VARCHAR},
    #{carLocation,jdbcType=VARCHAR},#{carNumber,jdbcType=VARCHAR},#{washType,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR},
    #{useCarTime,jdbcType=TIMESTAMP},#{roomNumber,jdbcType=VARCHAR},#{note,jdbcType=VARCHAR},#{acceptTime,jdbcType=TIMESTAMP},
    #{finishTime,jdbcType=TIMESTAMP},#{acceptNote,jdbcType=VARCHAR},#{orderStatus,jdbcType=VARCHAR},#{orderMoney,jdbcType=REAL},
    #{backMoney,jdbcType=REAL},#{serviceRate,jdbcType=INTEGER},#{serviceNote,jdbcType=VARCHAR},#{acceptUserName,jdbcType=VARCHAR},
    #{washUserName,jdbcType=VARCHAR},#{payType,jdbcType=VARCHAR})
 </insert>
 <!-- 删除订单 -->	
 <delete id="delOrderById">
 	DELETE FROM t_lxc_order WHERE ID=#{id,jdbcType=INTEGER}
 </delete>
 <!-- APP接口根据id查询订单结果 -->
 <select id="getMyOrderByid" resultMap="BaseResultMap">
 SELECT d.DATA_NAME as orderStatusStr,id,consumer_id,oname,remove,create_time,update_time,community_name,
    car_location,car_number,wash_type,phone,use_car_time,room_number,note,accept_time,finish_time,
    accept_note,order_status,order_money,back_money,service_rate,service_note,accept_user_name,wash_user_name,pay_type FROM  t_lxc_order
    LEFT JOIN BJ_INIT_DATA d on d.DATA_CODE=order_status
		 WHERE id = #{id,jdbcType=INTEGER}
 </select>
 <!-- 配置数据更新 -->
 <update id="upLayoutDate" parameterType="cn.yfyue.lxc.db.model.TLxcOrder" >
    update t_lxc_order
    <set >
      <if test="community_name != null" >
        community_name = #{community_name,jdbcType=VARCHAR},
      </if>
      <if test="wash_type != null" >
        wash_type = #{wash_type,jdbcType=VARCHAR},
      </if>
      <if test="remove != null" >
        remove = #{remove,jdbcType=BIT},
      </if>
    </set>
    where id=#{id,jdbcType=INTEGER}
  </update>
 <!-- 配置洗车类型统计 --> 
 <select id="getLayoutTypeCount"  resultType="java.lang.Integer">
      SELECT COUNT(1) FROM t_lxc_order WHERE 1=1 
         <if test="qkey !=null">
              AND wash_type LIKE '%${qkey}%'
		</if>
              ORDER BY use_car_time DESC
 </select>
 <!--此方法暂时不用 -->
 <!-- 订单完成处理 当状态小于3时可以取消，否则只能继续往下走  &gt; >  &lt; < 如果是4的话就不能再修改了 //加上接单开始时间，接单结束时间   
 <update id="updateOrder" >
 	 update t_lxc_order 
		<set >
		order_status = #{orderStatus,jdbcType=VARCHAR},
      	update_time = now(),
      	finish_time = now()
		</set> 
 	 where id = #{id,jdbcType=INTEGER}
 	  AND (
 	  		(#{orderStatus,jdbcType=VARCHAR} - order_status = 1 and order_status  &gt;0)
 	  	 OR (order_status &lt; 3 and #{orderStatus,jdbcType=VARCHAR} = 0)
	  )
 </update>-->
 <!-- int updateOrder(@Param("id") Integer id, @Param("orderStatus") String orderStatus); -->
 <update id="updateOrder">
 	update t_lxc_order 
 	<set>
	 	<if test="orderStatus =='ORDERSTATUS_HAVEORDER'">
	 		order_status = #{orderStatus,jdbcType=VARCHAR},
      		accept_time = now(),
	 		update_time = now(),
	 		accept_user_name=#{openId,jdbcType=VARCHAR}
	 	</if>
	 	<if test="orderStatus =='ORDERSTATUS_SUCCESS'">
	 		order_status = #{orderStatus,jdbcType=VARCHAR},
      		finish_time = now(),
	 		update_time = now()
	 	</if>
	 	<if test="orderStatus =='ORDERSTATUS_CANCEL'">
	 		order_status = #{orderStatus,jdbcType=VARCHAR},
	 		update_time = now()
	 	</if>
	 	<if test="operateFee !=null">
	 		,back_money = #{operateFee}
	 	</if>
	 	<if test="orderStatus =='ORDERSTATUS_PAID'">
	 		order_status = #{orderStatus,jdbcType=VARCHAR},
	 		update_time = now()
	 	</if>
	 	where id = #{id,jdbcType=INTEGER}
	 	<if test="orderStatus =='ORDERSTATUS_HAVEORDER'">
	 		and order_status !="ORDERSTATUS_HAVEORDER"
	 	</if>
 	</set>
 </update>
 <!-- 根据客户的标识查询订单-->
 <select id="findOrderByid"  resultMap="BaseResultMap">
  SELECT id,consumer_id,oname,remove,create_time,update_time,community_name,
    car_location,car_number,wash_type,phone,use_car_time,room_number,note,accept_time,finish_time,
    accept_note,order_status,order_money,back_money,service_rate,service_note,accept_user_name,wash_user_name FROM (
     SELECT id,consumer_id,oname,remove,create_time,update_time,community_name,
    car_location,car_number,wash_type,phone,use_car_time,room_number,note,accept_time,finish_time,
    accept_note,order_status,order_money,back_money,service_rate,service_note,accept_user_name,wash_user_name
		FROM t_lxc_order
		 WHERE consumer_id = #{consumerId,jdbcType=INTEGER}
              ORDER BY id DESC
         ) as Q1  LIMIT #{startRow,jdbcType=INTEGER},#{rownum,jdbcType=INTEGER}
 </select>
 <!-- 查询已完成的订单 
	List<TLxcOrder> findOrderunfinishedList(@Param("orderStatus") String orderStatus,
	@Param("startRow") int startRow,@Param("rownum") int rownum);
 -->
 <select id="findOrderunfinishedList" resultMap="BaseResultMap">
 	SELECT d.DATA_NAME as orderStatusStr,
 	c.wechat_id as consumerOpenid,
 	r.id,r.consumer_id,r.oname,r.remove,r.create_time,r.update_time,r.community_name,
    r.car_location,r.car_number,r.wash_type,r.phone,r.use_car_time,r.room_number,r.note,r.accept_time,r.finish_time,
    r.accept_note,r.order_status,r.order_money,r.back_money,r.service_rate,r.service_note,r.accept_user_name,r.wash_user_name FROM t_lxc_order r
    LEFT JOIN BJ_INIT_DATA d on d.DATA_CODE=r.order_status
    LEFT JOIN t_lxc_customer c on c.id=r.consumer_id
    WHERE 1=1 
	 <if test="orderStatus!=null">
      	and order_status in ('ORDERSTATUS_SUCCESS','ORDERSTATUS_CANCEL')
    </if>
    <if test="customerId!=null">
      	and consumer_id = #{customerId,jdbcType=VARCHAR}
    </if>
    order by r.id desc
    LIMIT #{startRow,jdbcType=INTEGER},#{rownum,jdbcType=INTEGER}
 </select>
 <!-- 查询未完成的订单 
 List<TLxcOrder> findOrdercompletedList(@Param("orderStatus") 
 String orderStatus,@Param("startRow") int startRow,@Param("rownum") int rownum);
 -->
 <select id="findOrdercompletedList" resultMap="BaseResultMap">
 	SELECT d.DATA_NAME as orderStatusStr,
 	c.wechat_id as consumerOpenid,
 	r.id,r.consumer_id,r.oname,r.remove,r.create_time,r.update_time,r.community_name,
    r.car_location,r.car_number,r.wash_type,r.phone,r.use_car_time,r.room_number,r.note,r.accept_time,r.finish_time,
    r.accept_note,r.order_status,r.order_money,r.back_money,r.service_rate,r.service_note,r.accept_user_name,r.wash_user_name FROM t_lxc_order r
    LEFT JOIN BJ_INIT_DATA d on d.DATA_CODE=r.order_status
    LEFT JOIN t_lxc_customer c on c.id=r.consumer_id
    WHERE 1=1
	 <if test="orderStatus!=null">
     	and order_status in ('ORDERSTATUS_UNPAID','ORDERSTATUS_PAID','ORDERSTATUS_HAVEORDER')
    </if>
    <if test="customerId!=null">
      	and consumer_id = #{customerId,jdbcType=VARCHAR}
    </if>
    order by r.id desc
    LIMIT #{startRow,jdbcType=INTEGER},#{rownum,jdbcType=INTEGER}
 </select>
 <!-- 添加订单评论 -->
 <insert id="addOrderServiceNote" parameterType="cn.yfyue.lxc.db.model.TLxcOrder">
 	update t_lxc_order set service_note=#{serviceNote,jdbcType=VARCHAR} where id=#{id}
 </insert>
 <!-- 获取订单的余额 -->
 <select id="getOrdermoney" resultType="java.lang.Integer">	
 	SELECT order_money from t_lxc_order WHERE consumer_id=#{openId,jdbcType=INTEGER}
 </select>
 
  <update id="updateRefundForBalance">
 	update t_lxc_order set back_money=#{refundFee},order_status="ORDERSTATUS_CANCEL"
	where id = #{outTradeNo}
  </update>
  
   <update id="updateOrderStatusAndPayType">
 	update t_lxc_order set order_status=#{orderStatus},pay_type=#{payType}
	where id = #{outTradeNo}
  </update>
  
  <select id="findOrderForLast" resultMap="BaseResultMap">
    select 
 	r.id,r.consumer_id,r.oname,r.remove,r.create_time,r.update_time,r.community_name,
    r.car_location,r.car_number,r.wash_type,r.phone,r.use_car_time,r.room_number,r.note,r.accept_time,r.finish_time,
    r.accept_note,r.order_status,r.order_money,r.back_money,r.service_rate,r.service_note,r.accept_user_name,r.wash_user_name
    ,c.wechat_id FROM t_lxc_order r
    LEFT JOIN t_lxc_customer c on c.id=r.consumer_id
    where 1=1 and c.wechat_id=#{openId} order by r.id desc limit 1
  </select>
  <!-- 查询所有订单 -->
 <!-- //统计报表全部订单
	List<TLxcOrder> getOrderPortList(@Param("startDate")String startDate,@Param("endDate")String endDate,
	@Param("startRow") int startRow,@Param("rownum") int rownum); -->
  <select id="getOrderPortList" resultMap="BaseResultMap">
    SELECT id,consumer_id,oname,remove,create_time,update_time,community_name,car_location,
    car_number,wash_type,phone,use_car_time,room_number,note,accept_time,finish_time, accept_note,
    order_status,order_money,back_money,service_rate,service_note,accept_user_name,wash_user_name,pay_type 
	FROM t_lxc_order WHERE 1=1
		 <if test="startDate !=null and startDate!=''">
           AND  create_time <![CDATA[>=]]>#{startDate,jdbcType=TIMESTAMP}
		</if>
		<if test="endDate !=null and endDate!=''">
           AND  create_time <![CDATA[<=]]>#{endDate,jdbcType=TIMESTAMP}
		</if>
		<if test="typeCode !=null and typeCode!=''">
           AND  community_name=#{typeCode,jdbcType=VARCHAR}
		</if>
          LIMIT #{startRow,jdbcType=INTEGER},#{rownum,jdbcType=INTEGER}
  </select>
  <!-- int getOrderPortCount(@Param("startDate")String startDate,@Param("endDate")String endDate)@Param("typeCode")String typeCode; -->
 <select id="getOrderPortCount" resultType="java.lang.Integer">
	 SELECT COUNT(1) FROM t_lxc_order WHERE 1=1 
		 
		<if test="startDate !=null and startDate!=''">
           AND  create_time <![CDATA[>=]]>#{startDate,jdbcType=TIMESTAMP}
		</if>
		<if test="endDate !=null and endDate!=''">
           AND  create_time <![CDATA[<=]]>#{endDate,jdbcType=TIMESTAMP}
		</if>
		
		<if test="typeCode !=null and typeCode!=''">
           AND  community_name=#{typeCode,jdbcType=VARCHAR}
		</if>
		LIMIT #{startRow,jdbcType=INTEGER},#{rownum,jdbcType=INTEGER}
</select>
<!-- 统计订单和退回总金额 -->
 <select id="getOrderSumMoney" resultMap="CountOrderMoney">
 	SELECT SUM(order_money)as ordersumoney,SUM(back_money)as backsumoney FROM t_lxc_order where 1=1
 		<if test="startDate !=null and startDate!=''">
                AND  create_time <![CDATA[>=]]>#{startDate,jdbcType=TIMESTAMP}
		</if>
		<if test="endDate !=null and endDate!=''">
                AND  create_time <![CDATA[<=]]>#{endDate,jdbcType=TIMESTAMP}
		</if>
		<if test="typeCode !=null and typeCode!=''">
                AND  community_name=#{typeCode,jdbcType=VARCHAR}
		</if>
		
 </select>

</mapper>