<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.yfyue.sysauth.db.inter.BjUserFuncMapper" >
  <resultMap id="BaseResultMap" type="cn.yfyue.sysauth.db.model.BjUserFunc" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="USER_FUN_ID" property="userFunId" jdbcType="BIGINT" />
    <result column="USER_ID" property="userId" jdbcType="BIGINT" />
    <result column="FUN_ID" property="funId" jdbcType="BIGINT" />
    <result column="REG_MAN" property="regMan" jdbcType="BIGINT" />
    <result column="REG_TIME" property="regTime" jdbcType="TIMESTAMP" />
    
    <result column="FUNC_ID" property="funcId" jdbcType="BIGINT" />
    <result column="FUNC_NAME" property="funcName" jdbcType="CHAR" />
    <result column="FUNC_URL" property="funcUrl" jdbcType="VARCHAR" />
    <result column="FUNC_STATE" property="funcState" jdbcType="INTEGER" />
    <result column="SUPPER_FUNC_ID" property="supperFuncId" jdbcType="BIGINT" />
    <result column="IS_LEAF" property="isLeaf" jdbcType="INTEGER" />
    <result column="FUNC_ALIAS" property="funcAlias" jdbcType="CHAR" />
    <result column="FUNC_LEVEL" property="funcLevel" jdbcType="INTEGER" />
    <result column="STYLE_IMG" property="styleImg" jdbcType="VARCHAR" />
  </resultMap>
<!-- 
//取用户的权限
List<BjUserFunc> getUserFuncList(@Param("userId")String userId,@Param("adminLevel")String adminLevel);
-->
<select id="getUserFuncList"   resultMap="BaseResultMap">
          <choose>
             <when test="adminLevel ==0">
				SELECT  FUNC_ID,FUNC_NAME,FUNC_URL,SUPPER_FUNC_ID,
				  IS_LEAF,FUNC_ALIAS,FUNC_LEVEL,STYLE_IMG
				FROM BJ_FUNC WHERE func_state=0
				ORDER BY FUNC_ORDER ASC,REG_TIME ASC
             </when>
             <otherwise>
               SELECT b.FUNC_ID,b.FUNC_NAME,b.FUNC_URL,b.SUPPER_FUNC_ID,
					  b.IS_LEAF,b.FUNC_ALIAS,b.FUNC_LEVEL,b.STYLE_IMG
				FROM BJ_USER_FUNC a,BJ_FUNC b WHERE a.FUN_ID=b.FUNC_ID 
				 AND b.FUNC_STATE=0 AND USER_ID=#{userId,jdbcType=BIGINT}
				 ORDER BY b.FUNC_ORDER ASC,b.REG_TIME ASC
            </otherwise>
        </choose>
</select>
<!--
//添加分配权限
int addUserFunc(BjUserFunc bjUserFunc);
-->
  <insert id="addUserFunc" parameterType="cn.yfyue.sysauth.db.model.BjUserFunc" >
    insert into BJ_USER_FUNC (USER_ID, FUN_ID, 
      REG_MAN, REG_TIME)
    values (#{userId,jdbcType=BIGINT}, #{funId,jdbcType=BIGINT}, 
      #{regMan,jdbcType=BIGINT}, NOW())
  </insert>
<!--
//按功能ID清掉权限
int delFunIdToUserFunc(String funcId);
-->
<delete id="delFunIdToUserFunc">
 	DELETE FROM BJ_USER_FUNC WHERE FUN_ID=#{funcId,jdbcType=BIGINT}
</delete>
<!--
//按用户ID清掉权限
int delUserIdToUserFunc(String userId);
 -->  
<delete id="delUserIdToUserFunc">
 	DELETE FROM BJ_USER_FUNC WHERE USER_ID=#{userId,jdbcType=BIGINT}
</delete>
<!-- 
//验证是否有权使用
int isUserFunc(@Param("userId")String userId,@Param("funcId")String funcId);
 -->
 <select id="isUserFunc"   resultType="java.lang.Integer">
      SELECT COUNT(1) FROM BJ_USER_FUNC WHERE USER_ID=#{userId,jdbcType=BIGINT} 
        AND FUN_ID=#{funcId,jdbcType=BIGINT}
 </select>
</mapper>