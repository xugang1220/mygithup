<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.yfyue.yyzt.db.inter.OpUserMapper" >
  <resultMap id="BaseResultMap" type="cn.yfyue.yyzt.db.model.OpUser" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="USER_ID" property="userId" jdbcType="BIGINT" />
    <result column="LOGIN_NAME" property="loginName" jdbcType="CHAR" />
    <result column="PASS_WORD" property="passWord" jdbcType="CHAR" />
    <result column="USER_NAME" property="userName" jdbcType="CHAR" />
    <result column="MOBILE_NO" property="mobileNo" jdbcType="CHAR" />
    <result column="USER_STATUS" property="userStatus" jdbcType="INTEGER" />
    <result column="OPEN_TIME" property="openTime" jdbcType="TIMESTAMP" />
    <result column="OPEN_USER_ID" property="openUserId" jdbcType="BIGINT" />
    <result column="ADMIN_LEVEL" property="adminLevel" jdbcType="INTEGER" />
    <result column="ORGE_ID" property="orgeId" jdbcType="BIGINT" />
    <result column="ROLE_CODE" property="roleCode" jdbcType="VARCHAR" />
    <result column="DATA_EXT" property="dataExt" jdbcType="VARCHAR" />
    <result column="DATA_EXT2" property="dataExt2" jdbcType="VARCHAR" />
    <result column="UP_TIME" property="upTime" jdbcType="TIMESTAMP" />
    <result column="ORGE_NAME" property="orgeName" jdbcType="CHAR" />
    <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
    <result column="OPEN_USER_NAME" property="openUserName" jdbcType="CHAR" />
  </resultMap>
<!-- 
//用户列表
List<OpUser> getUserList(@Param("orgeId")String orgeId,
		@Param("qkey")String qkey,
		@Param("startRow")int startRow,
		@Param("rowNum")int rowNum);
-->
<select id="getUserList" resultMap="BaseResultMap">
  SELECT USER_ID,LOGIN_NAME,USER_NAME,MOBILE_NO,USER_STATUS,OPEN_TIME,ROLE_CODE,ORGE_NAME,OPEN_USER_NAME,ADMIN_LEVEL FROM (
    SELECT a.USER_ID,a.LOGIN_NAME,a.USER_NAME,a.MOBILE_NO,a.USER_STATUS,
	a.OPEN_TIME,a.ROLE_CODE,c.ORGE_FULL_NAME as ORGE_NAME,b.USER_NAME AS OPEN_USER_NAME, a.ADMIN_LEVEL
	FROM OP_USER a LEFT JOIN OP_USER b ON (a.OPEN_USER_ID=b.USER_ID)
	LEFT JOIN OP_ORGE c ON (a.ORGE_ID=c.ORGE_ID) WHERE a.ORGE_ID=#{orgeId,jdbcType=BIGINT}   
	<if test="qkey !=null">
	  AND (a.LOGIN_NAME LIKE '%${qkey}%' OR a.USER_NAME LIKE '%${qkey}%' )
	</if>
    ORDER BY a.OPEN_TIME DESC) as Q1  LIMIT #{startRow,jdbcType=INTEGER},#{rowNum,jdbcType=INTEGER}
  </select>  
<!--	
//用户列表统计
int getUserListCount(@Param("orgeId")String orgeId,
		@Param("qkey")String qkey);
 -->  
<select id="getUserListCount" resultType="java.lang.Integer">
  SELECT COUNT(1) FROM OP_USER a LEFT JOIN OP_USER b ON (a.OPEN_USER_ID=b.USER_ID)
	LEFT JOIN OP_ORGE c ON (a.ORGE_ID=c.ORGE_ID)
	WHERE a.ORGE_ID=#{orgeId,jdbcType=BIGINT}  
	<if test="qkey !=null">
	  AND (a.LOGIN_NAME LIKE '%${qkey}%' OR a.USER_NAME LIKE '%${qkey}%' )
    </if>
</select>
<!-- 
//取自己的信息
OpUser getUserInfo(@Param("userId")String userId);
-->
<select id="getUserInfo" resultMap="BaseResultMap">
  SELECT  a.USER_ID,a.LOGIN_NAME,a.USER_NAME,a.MOBILE_NO,a.USER_STATUS,a.ORGE_ID,
	a.ROLE_CODE,b.ORGE_NAME,c.DATA_NAME AS ROLE_NAME
    FROM OP_USER a LEFT JOIN OP_ORGE b ON (a.ORGE_ID=b.ORGE_ID)
	LEFT JOIN BJ_INIT_DATA c ON (a.ROLE_CODE=c.DATA_CODE)
	WHERE a.USER_ID=#{userId,jdbcType=BIGINT}     
</select>
 <!-- 
//用户名是否存在
int isLoginName(@Param("loginName")String loginName);
-->
<select id="isLoginName" resultType="java.lang.Integer">
   SELECT COUNT(1) FROM OP_USER WHERE LOGIN_NAME=#{loginName,jdbcType=CHAR}
</select>
<!-- 
//初始化密码
int initPasswd(@Param("userId")String userId, @Param("passwd")String passwd);
-->
<update id="initPasswd">
    UPDATE OP_USER SET PASS_WORD=#{passwd,jdbcType=CHAR} 
      WHERE USER_ID=#{userId,jdbcType=BIGINT} 
</update>
<!-- 
//更新自己信息
int upUser(OpUser opUser);
 -->  
 <update id="upUser" parameterType="cn.yfyue.yyzt.db.model.OpUser" >
    UPDATE OP_USER
    <set >
      <if test="userName != null" >
        USER_NAME = #{userName,jdbcType=CHAR},
      </if>
      <if test="mobileNo != null" >
        MOBILE_NO = #{mobileNo,jdbcType=CHAR},
      </if>
        UP_TIME = NOW(),
    </set>
    WHERE USER_ID = #{userId,jdbcType=BIGINT}
  </update>  
 <!-- 
 //添加账户
int addUser(OpUser opUer);
  --> 
<insert id="addUser" parameterType="cn.yfyue.yyzt.db.model.OpUser" useGeneratedKeys="true" keyProperty="userId">
    insert into OP_USER (LOGIN_NAME, PASS_WORD, 
      USER_NAME, MOBILE_NO, USER_STATUS, 
      OPEN_TIME, OPEN_USER_ID, ADMIN_LEVEL, 
      ORGE_ID, ROLE_CODE, DATA_EXT, 
      DATA_EXT2, UP_TIME)
    values (#{loginName,jdbcType=CHAR}, #{passWord,jdbcType=CHAR}, 
      #{userName,jdbcType=CHAR}, #{mobileNo,jdbcType=CHAR},0, 
      NOW(), #{openUserId,jdbcType=BIGINT}, #{adminLevel,jdbcType=INTEGER}, 
      #{orgeId,jdbcType=BIGINT}, #{roleCode,jdbcType=VARCHAR}, #{dataExt,jdbcType=VARCHAR}, 
      #{dataExt2,jdbcType=VARCHAR}, NOW())
</insert>
<!-- 
//启用账户
int enabledUser(String userId);
-->
<update id="enabledUser">
   UPDATE OP_USER SET USER_STATUS=0 WHERE USER_ID=#{userId,jdbcType=BIGINT}
</update>
<!--
//禁用账户
int disabledUser(String userId);
 --> 
 <update id="disabledUser">
    UPDATE OP_USER SET USER_STATUS=1 WHERE USER_ID=#{userId,jdbcType=BIGINT}
</update>
</mapper>